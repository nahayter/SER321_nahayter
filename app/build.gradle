/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/9.1.0/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.example.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

// --- just like the slide ---

// A task showing doFirst / doLast
task('task1') {
    group = "Just a task"
    description = "Shows how doFirst and doLast works"
    doFirst { println "first" }
    doLast  { println "last"  }
}

// Same but reversed order of actions
task('task2') {
    group = "Just a task"
    description = "Shows how doFirst and doLast works -- reversed"
    doLast  { println "first" } // will run second because it's doLast
    doFirst { println "last"  } // will run first because it's doFirst
}

// PRINTS DURING *CONFIGURATION* (before any task runs)
task Project1 {
    println "Hello World"
}

task('project2') {
    println "Hello you"
}